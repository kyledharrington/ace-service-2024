{"version":"6","defaultTimeframe":{"from":"now()-2h","to":"now()"},"sections":[{"id":"3f6264b6-9392-4298-ab45-75021149edbc","type":"markdown","markdown":"# Using Dynatrace Log Analytics Powered by Grail for Offline Analysis \n#\n### Overview\n___\n#\nDuration: 10 min\n#\n### Target audience\n* Dynatrace SEs, Services, etc..\n#\n### Use Cases\n#\n* You are working with a customer but don't have access to their environment but they need help.\n* You need time to research instead of doing live with the customer\n* In this lab the customer needs help with extracting response times per order and failed orders for use in Dashboards and Alerting\n#\n### What Youâ€™ll Learn Today \n#\n* How to easily import data into a Notebook and do analysis offline that you can review and share back with customer\n# "},{"id":"04a49a6f-d0aa-4ac0-ac94-a1b3721dacf2","type":"markdown","markdown":"#### Step 1: Import saved log data into a Notebook in your environment\n#\n* Log data needs to be in .csv format,  \n* Either exported from Dynatrace or if a prospect have them send you a few log lines\n* Drag the .csv file into a notebook.   \n* Tip: The .csv file needs to be under 20k in size"},{"id":"e4150b21-a901-4d10-84e4-63664d36720d","type":"markdown","markdown":"#### Step 2: Filter and Parse the data\n#\n```\n| filter matchesValue(k8s.container.name, \"frontendreverseproxy\") and matchesPhrase(content, \"credit-card-order-service\") and matchesPhrase(content, \"instruments\") and matchesValue(k8s.namespace.name, \"easytrade-otel\")\n| sort timestamp desc\n\n| parse content, \"\"\"LD 'credit-card-order-service/v1/orders/' LD:orderNumber '/' LD '\"' SPACE LD:responseCode SPACE LONG:responseTime SPACE LD  '/instruments/' LD:part '\"'\"\"\"\n| fields timestamp, orderNumber, part, responseCode, responseTime\n```\n#"},{"id":"f66b307b-c234-4dbf-8993-2ddeedf87fb0","type":"markdown","markdown":"#### Step 3: Summarize Response Time Average for all Orders\n#\n```\n| filter matchesValue(k8s.container.name, \"frontendreverseproxy\") and matchesPhrase(content, \"credit-card-order-service\") and matchesPhrase(content, \"instruments\") and matchesValue(k8s.namespace.name, \"easytrade-otel\")\n| sort timestamp desc\n\n| parse content, \"\"\"LD 'credit-card-order-service/v1/orders/' LD:orderNumber '/' LD '\"' SPACE LONG:responseCode SPACE INT:responseTime SPACE LD  '/instruments/' LD:part '\"'\"\"\"\n| summarize responseTime = toDouble(avg(responseTime))\n```\n#"},{"id":"1f0de222-1a24-4ee8-ae0c-e41e75cc0f44","type":"markdown","markdown":"#### Step 4: Summarize Failed Orders and Test by Changing Status Code Values in Data Records\n#\n* After importing the offline data you will change the data for response codes so when the query is rerun it will reflect Failed Orders.\n#\n```\n| filter matchesValue(k8s.container.name, \"frontendreverseproxy\") and matchesPhrase(content, \"credit-card-order-service\") and matchesPhrase(content, \"instruments\") and matchesValue(k8s.namespace.name, \"easytrade-otel\")\n| sort timestamp desc\n\n| parse content, \"\"\"LD 'credit-card-order-service/v1/orders/' LD:orderNumber '/' LD '\"' SPACE LONG:responseCode SPACE INT:responseTime SPACE LD  '/instruments/' LD:part '\"'\"\"\"\n| summarize failedOrders = countIf(responseCode == 400 or (responseCode >= 500  and responseCode <=599))\n```\n#"},{"id":"33bf6582-71d4-4a7e-ac36-4fcb609d6436","type":"markdown","markdown":"#### Step 5: Show Failed Orders over time\n#\n*   After importing the offline data you will change the data for response codes so when the query is rerun it will reflect Failed Orders. \n#\n```\n| filter matchesValue(k8s.container.name, \"frontendreverseproxy\") and matchesPhrase(content, \"credit-card-order-service\") and matchesPhrase(content, \"instruments\") and matchesValue(k8s.namespace.name, \"easytrade-otel\")\n| sort timestamp desc\n\n| parse content, \"\"\"LD 'credit-card-order-service/v1/orders/' LD:orderNumber '/' LD '\"' SPACE LONG:responseCode SPACE INT:responseTime SPACE LD  '/instruments/' LD:part '\"'\"\"\"\n| fieldsAdd timestamp = toTimestamp(timestamp)\n| makeTimeseries  failedOrders = countIf(responseCode == 400 or (responseCode >= 500  and responseCode <=599)), \n                      from: toTimestamp(\"2024-07-02T17:00:00.000Z\"),\n                      to: toTimestamp(\"2024-07-02T17:15:00.000Z\")\n```\n#"}]}