{
  "version": 15,
  "variables": [],
  "tiles": {
    "0": {
      "type": "markdown",
      "title": "",
      "content": "## üìã Claim registered\n---\nüíº Business KPI = Time taken to register claim."
    },
    "1": {
      "type": "markdown",
      "title": "",
      "content": "## üì± Document submission\n---\nüíº Business KPI = Success rate of document submission."
    },
    "2": {
      "type": "markdown",
      "title": "",
      "content": "## ‚úçÔ∏è Internal review\n---\nüíº Business KPI = Percentage change in reviews done in the last 1 hour compared to yesterday."
    },
    "3": {
      "type": "markdown",
      "title": "",
      "content": "## üì§ 3rd party review\n---\nüíº Business KPI = Time taken to initiate 3rd party review from internal."
    },
    "4": {
      "type": "markdown",
      "title": "",
      "content": "## ‚úÖ Claim settled\n---\nüíº Business KPI = End-to-end claim settlement time."
    },
    "6": {
      "type": "data",
      "title": "",
      "query": "// The two main ways to achieve this number are:\n// - Query Davis events and filter by the services/entities known to power this part of the journey.\n// - Using a topology lookup:\n//   - Get Biz Events related to this step.\n//   - \"Lookup\" the Spans using the trace ID.\n//   - Collect a \"Distinct\" list of the Services.\n//   - \"Lookup\" any Davis events related to those Services.\nfetch bizevents\n| fieldsAdd problemExample = 0\n| limit 1",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "problemExample",
            "title": "Open Problems",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-themed-fireplace-color-01-default, #ae132d)"
                },
                "comparator": "‚â•",
                "label": "",
                "value": 1
              },
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-vulnerability-status-resolved-default, #3e8e6a)"
                },
                "comparator": "‚â•",
                "label": "",
                "value": 0
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxis": "dt.entity.host",
            "valueAxis": "problemExample",
            "categoryAxisLabel": "dt.entity.host",
            "valueAxisLabel": "problemExample"
          },
          "fieldMapping": {
            "timestamp": "timestamp",
            "leftAxisValues": ["problemExample"],
            "leftAxisDimensions": ["dt.entity.host"]
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "üõ†Ô∏è IT ISSUES",
          "prefixIcon": "",
          "autoscale": true,
          "sparklineSettings": {
            "isVisible": false
          },
          "alignment": "center",
          "trend": {
            "isVisible": false
          },
          "colorThresholdTarget": "background",
          "recordField": "problemExample"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "timestamp"
          },
          "legend": "auto",
          "displayedFields": ["dt.entity.host"],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "problemExample",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "11": {
      "type": "data",
      "title": "",
      "query": "// Real example from the data of the average order value split by loyalty.\nfetch bizevents\n| filter event.provider == \"acme.insurance\" and event.type == \"claim.registered\"\n| summarize `Count` = count(), by:{claim.type}",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "donutChart",
      "visualizationSettings": {
        "thresholds": [],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative",
            "showTotalValue": true,
            "hideLabels": false
          },
          "categoryOverrides": {
            "cargo": {
              "color": "var(--dt-colors-charts-logstatus-none-default, #2c2f3f)",
              "added": 1722267745847
            },
            "liability": {
              "color": "var(--dt-colors-charts-categorical-color-15-default, #9033a3)",
              "added": 1722267747050
            },
            "property": {
              "color": "var(--dt-colors-charts-categorical-color-09-default, #649438)",
              "added": 1722267748571
            }
          },
          "categoricalBarChartSettings": {
            "categoryAxis": "claim.type",
            "categoryAxisLabel": "claim.type",
            "valueAxis": "Count",
            "valueAxisLabel": "Count",
            "layout": "horizontal"
          },
          "legend": {
            "hidden": false,
            "position": "right"
          },
          "colorPalette": "blue-steel",
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "",
          "prefixIcon": "",
          "autoscale": true,
          "alignment": "center",
          "recordField": "searchTerm"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "claim.type"
          },
          "legend": "auto",
          "displayedFields": ["claim.type"],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "Count",
              "rangeAxis": ""
            }
          ]
        },
        "unitsOverrides": [
          {
            "identifier": "Number of bookings",
            "unitCategory": "unspecified",
            "baseUnit": "none",
            "displayUnit": null,
            "decimals": 2,
            "suffix": "",
            "delimiter": false,
            "added": 1719589709341
          }
        ]
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "13": {
      "type": "markdown",
      "title": "",
      "content": "Drilldown: [IT](https://guu84124.apps.dynatrace.com/ui/apps/dynatrace.classic.problems/ui/problems) | [Security](https://guu84124.apps.dynatrace.com/ui/apps/dynatrace.classic.vulnerabilities/ui/security/vulnerabilities) | [Carbon](https://guu84124.apps.dynatrace.com/ui/apps/dynatrace.biz.carbon/) | [Business](https://www.dynatrace.com/company/dynatrace-for-executives/#02-business-analytics)"
    },
    "14": {
      "type": "data",
      "title": "",
      "query": "fetch bizevents\n| filter event.provider == \"acme.insurance\" \n| filter event.type == \"customer.call\" or event.type == \"claim.registered\"\n| summarize {callTimestamp = takeMin(timestamp), claimTimestamp = takeMax(timestamp)}, by:{claim.id}\n| filterOut isNull(callTimestamp) or isNull(claimTimestamp)\n| fieldsAdd duration = claimTimestamp - callTimestamp\n| makeTimeseries {avg(duration)}, time:callTimestamp, bins:50",
      "davis": {
        "enabled": true,
        "componentState": {
          "selectedAnalyzerName": "dt.statistics.ui.anomaly_detection.AutoAdaptiveAnomalyDetectionAnalyzer",
          "inputData": {
            "dt.statistics.ui.anomaly_detection.AutoAdaptiveAnomalyDetectionAnalyzer": {
              "generalParameters": {
                "timeframe": {
                  "startTime": "now-24h",
                  "endTime": "now"
                },
                "resolveDimensionalQueryData": true,
                "logVerbosity": "INFO"
              },
              "numberOfSignalFluctuations": 1,
              "alertCondition": "OUTSIDE",
              "alertOnMissingData": false,
              "violatingSamples": 2,
              "slidingWindow": 5,
              "dealertingSamples": 5,
              "query": "fetch bizevents\n| filter event.provider == \"acme.insurance\" \n| filter event.type == \"customer.call\" or event.type == \"claim.registered\"\n| summarize {callTimestamp = takeMin(timestamp), claimTimestamp = takeMax(timestamp)}, by:{claim.id}\n| filterOut isNull(callTimestamp) or isNull(claimTimestamp)\n| fieldsAdd duration = claimTimestamp - callTimestamp\n| makeTimeseries {avg(duration)}, time:callTimestamp, bins:50"
            }
          }
        },
        "davisVisualization": {
          "isAvailable": true,
          "settings": {
            "visibleSections": "VISUALIZATION"
          }
        }
      },
      "visualization": "davis",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "Top 5?",
            "title": "",
            "isEnabled": false,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-09-default, #649438)"
                },
                "comparator": "‚â•",
                "label": ""
              },
              {
                "id": 1,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"
                },
                "comparator": "‚â•",
                "label": ""
              },
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-12-default, #cd3741)"
                },
                "comparator": "‚â•",
                "label": "",
                "value": 1
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "customer.id",
            "valueAxisLabel": "booking.value",
            "layout": "horizontal"
          },
          "legend": {
            "hidden": true
          },
          "fieldMapping": {
            "timestamp": "timeframe",
            "leftAxisValues": ["avg(duration)"],
            "leftAxisDimensions": []
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "",
          "prefixIcon": "",
          "autoscale": true,
          "alignment": "center",
          "recordField": "Search term"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {},
          "legend": "auto",
          "displayedFields": [],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "interval",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "15": {
      "type": "markdown",
      "title": "",
      "content": "### Claims by type\n---\nHow many claims are made under each available category."
    },
    "16": {
      "type": "markdown",
      "title": "",
      "content": "### Claim register time\n---\nTime taken to register the claim, Davis highlights where the value is higher or lower than expected."
    },
    "17": {
      "type": "markdown",
      "title": "",
      "content": "### Document submission success\n---\nTracking over time whether documents are submitted successfully (üü¢) or have issues (üî¥)."
    },
    "18": {
      "type": "data",
      "title": "",
      "query": "// The two main ways to achieve this number are:\n// - Query Security events and filter by the services/entities known to power this part of the journey.\n// - Using a topology lookup:\n//   - Get Biz Events related to this step.\n//   - \"Lookup\" the Spans using the trace ID.\n//   - Collect a \"Distinct\" list of the Services.\n//   - \"Lookup\" any Security events related to those Services.\nfetch bizevents\n| fieldsAdd securityExample = \"4/10\"\n| limit 1",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "securityExample",
            "title": "Security score",
            "isEnabled": true,
            "rules": [
              {
                "id": 1,
                "color": {
                  "Default": "var(--dt-colors-charts-apdex-excellent-default, #2a7453)"
                },
                "comparator": "=",
                "label": "",
                "value": "4/10"
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "securityExample",
            "valueAxisLabel": "account.fee",
            "categoryAxis": "securityExample",
            "valueAxis": "account.fee"
          },
          "hiddenLegendFields": [],
          "fieldMapping": {
            "timestamp": "timestamp",
            "leftAxisValues": ["account.fee"],
            "leftAxisDimensions": ["securityExample"]
          }
        },
        "singleValue": {
          "showLabel": true,
          "label": "üîí SECURITY",
          "prefixIcon": "",
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "background",
          "recordField": "securityExample"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "timestamp"
          },
          "legend": "auto",
          "displayedFields": ["securityExample"],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "dataMappings": []
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "22": {
      "type": "data",
      "title": "",
      "query": "fetch bizevents\n| filter event.provider == \"acme.insurance\" and startsWith(event.type, \"documents.submitted\")\n| makeTimeseries `Count` = count(), by:{event.type}, bins:50",
      "davis": {
        "enabled": false,
        "componentState": {
          "selectedAnalyzerName": "dt.statistics.ui.anomaly_detection.AutoAdaptiveAnomalyDetectionAnalyzer",
          "inputData": {
            "dt.statistics.ui.anomaly_detection.AutoAdaptiveAnomalyDetectionAnalyzer": {
              "generalParameters": {
                "timeframe": {
                  "startTime": "2024-06-27T14:11:35.440Z",
                  "endTime": "2024-06-28T14:11:35.440Z"
                },
                "resolveDimensionalQueryData": true,
                "logVerbosity": "INFO"
              },
              "numberOfSignalFluctuations": 1,
              "alertCondition": "OUTSIDE",
              "alertOnMissingData": false,
              "violatingSamples": 3,
              "slidingWindow": 5,
              "dealertingSamples": 5,
              "query": "// Real example from the data, of the average time to start picking an order.\nfetch bizevents\n| filter event.provider == \"acme.insurance\" \n| filter event.type == \"warehouse.received\" or event.type == \"item.picked\"\n| sort timestamp asc\n| fieldsAdd receiveTime = if(event.type == \"warehouse.received\", timestamp), pickTime = if(event.type == \"item.picked\", timestamp)\n| summarize firstReceive = takeFirst(receiveTime), firstPick = takeFirst(pickTime), by:{order.id}\n| filterOut isNull(firstReceive) or isNull(firstPick)\n| fieldsAdd timeToPick = firstPick - firstReceive\n| makeTimeseries ninetyTimeToPick = percentile(timeToPick, 90), time:firstPick, bins:50"
            }
          }
        },
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "barChart",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-09-default, #649438)"
                },
                "comparator": "‚â•",
                "label": ""
              },
              {
                "id": 1,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"
                },
                "comparator": "‚â•",
                "label": ""
              },
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-12-default, #cd3741)"
                },
                "comparator": "‚â•",
                "label": ""
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "legend": {
            "hidden": true
          },
          "seriesOverrides": [
            {
              "seriesId": ["documents.submitted.assets.corrupt"],
              "override": {
                "color": {
                  "Default": "var(--dt-colors-charts-loglevel-emergency-default, #ae132d)"
                }
              }
            },
            {
              "seriesId": ["documents.submitted"],
              "override": {
                "color": {
                  "Default": "var(--dt-colors-charts-apdex-good-default, #1c520a)"
                }
              }
            }
          ],
          "colorPalette": "categorical",
          "fieldMapping": {
            "timestamp": "timeframe",
            "leftAxisValues": ["Count"],
            "leftAxisDimensions": ["event.type"]
          },
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "event.type",
            "valueAxisLabel": "interval",
            "categoryAxis": "event.type",
            "valueAxis": "interval"
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": false,
          "label": "",
          "prefixIcon": "",
          "autoscale": true,
          "alignment": "center",
          "recordField": "single"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "interval"
          },
          "legend": "auto",
          "displayedFields": ["event.type"],
          "colorMode": "color-palette",
          "colorPalette": "blue"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "interval",
              "rangeAxis": ""
            }
          ]
        },
        "unitsOverrides": [
          {
            "identifier": "ninetyTimeToPick",
            "unitCategory": "time",
            "baseUnit": "nanosecond",
            "displayUnit": null,
            "decimals": 0,
            "suffix": "",
            "delimiter": false,
            "added": 1717151082207
          }
        ]
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "23": {
      "type": "markdown",
      "title": "",
      "content": "### Average submissions per city\n---\nAverage number of documents submitted made by city."
    },
    "24": {
      "type": "data",
      "title": "",
      "query": "// Real example from the data of the number of items per order, per location. In this example we need to take data from a different event to get the order location.\nfetch bizevents\n| filter event.provider == \"acme.insurance\" \n| filter event.type == \"documents.submitted\" or event.type == \"claim.registered\"\n| summarize instaspectCount = countIf(event.type == \"documents.submitted\"), location = takeAny(location), by:{claim.id}\n| filter instaspectCount > 0\n| summarize `Count` = count(), by:{location}\n| sort Count desc",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "categoricalBarChart",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "single",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-09-default, #649438)"
                },
                "comparator": "‚â•",
                "label": ""
              },
              {
                "id": 1,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"
                },
                "comparator": "‚â•",
                "label": ""
              },
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-12-default, #cd3741)"
                },
                "comparator": "‚â•",
                "label": ""
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative",
            "showTotalValue": true
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "location",
            "valueAxisLabel": "Count",
            "categoryAxis": "location",
            "valueAxis": "Count",
            "layout": "horizontal"
          },
          "legend": {
            "hidden": true
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": false,
          "label": "",
          "prefixIcon": "",
          "autoscale": true,
          "alignment": "center",
          "recordField": "single",
          "trend": {
            "isInverseTrend": true
          }
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "hexagon",
          "dataMappings": {
            "value": "Count"
          },
          "legend": "right",
          "displayedFields": ["location"],
          "colorMode": "color-palette",
          "colorPalette": "blue"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "Count",
              "rangeAxis": ""
            }
          ]
        },
        "unitsOverrides": []
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "25": {
      "type": "data",
      "title": "",
      "query": "// This number obviously requires the Carbon app to be installed. An example way to calculate the footprint for part of the journey is:\n// - Fetch the Biz Events related to this part of the journey.\n// - Collect a \"Distinct\" list of the Hosts those Biz Events come from.\n// - \"Lookup\" the Carbon events related to those hosts.\n// - (Optional) If there's lots of shared infrastructure, you can go one step further and use the Process CPU to distribute Carbon to the specific Processes in use.\nfetch bizevents\n| fieldsAdd carbonExample = 452\n| limit 1",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "carbonExample",
            "title": "Carbon footprint",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-apdex-excellent-default, #2a7453)"
                },
                "comparator": "<",
                "label": "",
                "value": 1000
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "fieldMapping": {
            "timestamp": "timestamp",
            "leftAxisValues": ["carbonExample"],
            "leftAxisDimensions": ["dt.entity.host"]
          },
          "categoricalBarChartSettings": {
            "categoryAxis": "dt.entity.host",
            "valueAxis": "carbonExample",
            "categoryAxisLabel": "dt.entity.host",
            "valueAxisLabel": "carbonExample"
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "üå≥ CARBON",
          "autoscale": true,
          "sparklineSettings": {
            "isVisible": false,
            "showTicks": true
          },
          "alignment": "center",
          "trend": {
            "isVisible": true,
            "isRelative": true,
            "isInverseTrend": true
          },
          "recordField": "carbonExample",
          "colorThresholdTarget": "background"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "timestamp"
          },
          "legend": "auto",
          "displayedFields": ["dt.entity.host"],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "unitsOverrides": [
          {
            "identifier": "carbonExample",
            "unitCategory": "mass",
            "baseUnit": "kilogram",
            "displayUnit": "kilogram",
            "decimals": 0,
            "suffix": "",
            "delimiter": false,
            "added": 1703159936837
          }
        ],
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "carbonExample",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "26": {
      "type": "data",
      "title": "",
      "query": "fetch bizevents\n| filter event.provider == \"acme.insurance\" \n| filter event.type == \"customer.call\" or event.type == \"claim.registered\"\n| summarize callTimestamp = takeMin(timestamp), claimTimestamp = takeMax(timestamp), by:{claim.id}\n| filterOut isNull(callTimestamp) or isNull(claimTimestamp)\n| fieldsAdd duration = claimTimestamp - callTimestamp\n| summarize avgCallRegister = avg(duration)",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "avgCallRegister",
            "title": "Average order value",
            "isEnabled": true,
            "rules": [
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-vulnerability-status-resolved-default, #3e8e6a)"
                },
                "comparator": "‚â•",
                "label": "",
                "value": 500
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "customer.id",
            "valueAxisLabel": "test"
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "üíº BUSINESS KPI",
          "prefixIcon": "",
          "autoscale": true,
          "sparklineSettings": {
            "isVisible": false
          },
          "alignment": "center",
          "trend": {
            "isVisible": false
          },
          "colorThresholdTarget": "background",
          "recordField": "avgCallRegister"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "avgCallRegister"
          },
          "legend": "auto",
          "displayedFields": [null],
          "colorMode": "color-palette",
          "colorPalette": "blue"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "avgCallRegister",
              "rangeAxis": ""
            }
          ]
        },
        "unitsOverrides": [
          {
            "identifier": "averageOrderValue",
            "unitCategory": "currency",
            "baseUnit": "usd",
            "displayUnit": null,
            "decimals": 2,
            "suffix": "",
            "delimiter": true,
            "added": 1717148328781
          }
        ]
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "28": {
      "type": "data",
      "title": "",
      "query": "fetch bizevents\n| filter event.provider == \"acme.insurance\" and startsWith(event.type, \"documents.submitted\")\n| summarize success = countIf(event.type == \"documents.submitted\"), fail = countIf(event.type == \"documents.submitted.assets.corrupt\"), by:{claim.id}\n| summarize successCount = sum(success), failCount = sum(fail)\n| fieldsAdd successRate = (toDouble(successCount) / toDouble(successCount + failCount)) * 100",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "successRate",
            "title": "90th percentile time to pick",
            "isEnabled": true,
            "rules": [
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-loglevel-emergency-default, #ae132d)"
                },
                "comparator": "<",
                "label": "",
                "value": 100
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "claim.id",
            "valueAxisLabel": "success"
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "üíº BUSINESS KPI",
          "prefixIcon": "",
          "autoscale": true,
          "sparklineSettings": {
            "isVisible": false
          },
          "alignment": "center",
          "trend": {
            "isVisible": false
          },
          "colorThresholdTarget": "background",
          "recordField": "successRate"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "successCount"
          },
          "legend": "auto",
          "displayedFields": [null],
          "colorMode": "color-palette",
          "colorPalette": "blue"
        },
        "unitsOverrides": [
          {
            "identifier": "successRate",
            "unitCategory": "percentage",
            "baseUnit": "percent",
            "displayUnit": null,
            "decimals": 2,
            "suffix": "",
            "delimiter": false,
            "added": 1703163062500
          }
        ],
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "successCount",
              "rangeAxis": ""
            },
            {
              "valueAxis": "failCount",
              "rangeAxis": ""
            },
            {
              "valueAxis": "successRate",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "31": {
      "type": "data",
      "title": "",
      "query": "fetch bizevents, from: -2h, to:-1h\n| filter event.provider == \"acme.insurance\" and event.type == \"internal.review\"\n| summarize reviewsDoneNow = count(), by:{event.type}\n| lookup [fetch bizevents, from: -25h, to:-24h | filter event.provider == \"acme.insurance\" and event.type == \"internal.review\" | summarize reviewsDoneYesterday = count(), by:{event.type} ], sourceField:event.type, lookupField:event.type\n| fieldsAdd percentageChange = ((toDouble(lookup.reviewsDoneYesterday) - toDouble(reviewsDoneNow)) / toDouble(reviewsDoneNow)) * 100",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "percentageChange",
            "title": "Changes in orders being packed",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-vulnerability-status-resolved-default, #3e8e6a)"
                },
                "comparator": "‚â•",
                "label": "",
                "value": -10
              },
              {
                "id": 1,
                "color": {
                  "Default": "var(--dt-colors-charts-loglevel-emergency-default, #9033a3)"
                },
                "comparator": "<",
                "label": "",
                "value": -10
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxis": "event.type",
            "valueAxis": "reviewsDoneNow",
            "categoryAxisLabel": "event.type",
            "valueAxisLabel": "reviewsDoneNow",
            "tooltipVariant": "single"
          },
          "hiddenLegendFields": [],
          "truncationMode": "middle"
        },
        "singleValue": {
          "showLabel": true,
          "label": "üíº BUSINESS KPI",
          "prefixIcon": "",
          "autoscale": true,
          "sparklineSettings": {
            "isVisible": false
          },
          "alignment": "center",
          "trend": {
            "isVisible": false
          },
          "recordField": "percentageChange",
          "colorThresholdTarget": "background"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "reviewsDoneNow"
          },
          "legend": "auto",
          "displayedFields": ["event.type"],
          "colorMode": "color-palette",
          "colorPalette": "blue"
        },
        "unitsOverrides": [
          {
            "identifier": "percentageChange",
            "unitCategory": "percentage",
            "baseUnit": "percent",
            "displayUnit": null,
            "decimals": 2,
            "suffix": "",
            "delimiter": true,
            "added": 1703100953267
          }
        ],
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "reviewsDoneNow",
              "rangeAxis": ""
            },
            {
              "valueAxis": "lookup.reviewsDoneYesterday",
              "rangeAxis": ""
            },
            {
              "valueAxis": "percentageChange",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "32": {
      "type": "data",
      "title": "",
      "query": "fetch bizevents\n| filter event.provider == \"acme.insurance\"\n| filter event.type == \"internal.review\" or event.type == \"third.party.review\"\n| summarize internalTime = takeMin(timestamp), thirdPartyTime = takeMax(timestamp), by:{claim.id}\n| filterOut isNull(internalTime) or isNull(thirdPartyTime)\n| fieldsAdd duration = thirdPartyTime - internalTime\n| summarize averageTime = avg(duration)",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "averageTime",
            "title": "Shipping success rate",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-apdex-excellent-default, #2a7453)"
                },
                "comparator": "‚â•",
                "label": "",
                "value": 5
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "customer.id",
            "valueAxisLabel": "test"
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "üíº BUSINESS KPI",
          "prefixIcon": "",
          "autoscale": true,
          "sparklineSettings": {
            "isVisible": false
          },
          "alignment": "center",
          "trend": {
            "isVisible": false
          },
          "colorThresholdTarget": "background",
          "recordField": "averageTime"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "averageTime"
          },
          "legend": "auto",
          "displayedFields": [null],
          "colorMode": "color-palette",
          "colorPalette": "blue"
        },
        "unitsOverrides": [
          {
            "identifier": "averageTime",
            "unitCategory": "time",
            "baseUnit": "nanosecond",
            "displayUnit": null,
            "decimals": 2,
            "suffix": "",
            "delimiter": true,
            "added": 1703160585115
          }
        ],
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "averageTime",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "33": {
      "type": "data",
      "title": "",
      "query": "fetch bizevents\n| filter event.provider == \"acme.insurance\" and event.type == \"internal.review\"\n| makeTimeseries `Count` = count(), interval:1h",
      "davis": {
        "enabled": false,
        "componentState": {
          "selectedAnalyzerName": "dt.statistics.ui.anomaly_detection.AutoAdaptiveAnomalyDetectionAnalyzer",
          "inputData": {
            "dt.statistics.ui.anomaly_detection.AutoAdaptiveAnomalyDetectionAnalyzer": {
              "generalParameters": {
                "timeframe": {
                  "startTime": "2024-06-27T14:11:35.440Z",
                  "endTime": "2024-06-28T14:11:35.440Z"
                },
                "resolveDimensionalQueryData": true,
                "logVerbosity": "INFO"
              },
              "numberOfSignalFluctuations": 1,
              "alertCondition": "OUTSIDE",
              "alertOnMissingData": false,
              "violatingSamples": 4,
              "slidingWindow": 5,
              "dealertingSamples": 5,
              "query": "fetch bizevents\n| filter event.provider == \"acme.insurance\" and event.type == \"order.packed\"\n| makeTimeseries ordersPacked = count(), interval:1h"
            }
          }
        },
        "davisVisualization": {
          "isAvailable": true,
          "settings": {
            "visibleSections": "VISUALIZATION"
          }
        }
      },
      "visualization": "barChart",
      "visualizationSettings": {
        "thresholds": [],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "legend": {
            "hidden": true
          },
          "seriesOverrides": [
            {
              "seriesId": ["sparkline"],
              "override": {
                "color": {
                  "Default": "var(--dt-colors-charts-vulnerability-status-resolved-default, #3e8e6a)"
                }
              }
            }
          ],
          "fieldMapping": {
            "timestamp": "timeframe",
            "leftAxisValues": ["Count"],
            "leftAxisDimensions": []
          },
          "categoricalBarChartSettings": {},
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "Success rate",
          "prefixIcon": "",
          "recordField": "singlevalue",
          "autoscale": true,
          "alignment": "center",
          "trend": {
            "isRelative": true
          },
          "sparklineSettings": {
            "variant": "area",
            "showTicks": true
          }
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "interval"
          },
          "legend": "auto",
          "displayedFields": [null],
          "colorMode": "color-palette",
          "colorPalette": "blue"
        },
        "unitsOverrides": [
          {
            "identifier": "singlevalue",
            "unitCategory": "percentage",
            "baseUnit": "percent",
            "displayUnit": null,
            "decimals": 2,
            "suffix": "",
            "delimiter": false,
            "added": 1703100359149
          }
        ],
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "interval",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "34": {
      "type": "markdown",
      "title": "",
      "content": "### Internal review volume\n---\nNumber of internal reviews being completed, broken down hourly."
    },
    "35": {
      "type": "markdown",
      "title": "",
      "content": "### 3rd party review initiation\n---\nTime taken from finishing internal review to starting 3rd party review."
    },
    "36": {
      "type": "markdown",
      "title": "",
      "content": "### Additional evidence delays\n---\nTime taken to complete internal review with additional evidence (‚ö™Ô∏è), and without (üîµ)."
    },
    "37": {
      "type": "data",
      "title": "",
      "query": "fetch bizevents\n| filter event.provider == \"acme.insurance\"\n| filter event.type == \"internal.review\" or event.type == \"third.party.review\"\n| summarize {internalTime = takeMin(timestamp), thirdPartyTime = takeMax(timestamp)}, by:{claim.id}\n| filterOut internalTime == thirdPartyTime\n| fieldsAdd duration = thirdPartyTime - internalTime\n| makeTimeseries averageTime = avg(duration), time:internalTime",
      "davis": {
        "enabled": false,
        "componentState": {
          "selectedAnalyzerName": "dt.statistics.ui.anomaly_detection.SeasonalBaselineAnomalyDetectionAnalyzer",
          "inputData": {
            "dt.statistics.ui.anomaly_detection.SeasonalBaselineAnomalyDetectionAnalyzer": {
              "generalParameters": {
                "timeframe": {
                  "startTime": "2024-07-09T09:59:07.889Z",
                  "endTime": "2024-07-10T09:59:07.889Z"
                },
                "resolveDimensionalQueryData": true,
                "logVerbosity": "INFO"
              },
              "tolerance": 4,
              "alertCondition": "OUTSIDE",
              "alertOnMissingData": false,
              "violatingSamples": 3,
              "slidingWindow": 5,
              "dealertingSamples": 5,
              "query": "fetch bizevents\n| filter event.provider == \"acme.insurance\"\n| filter event.type == \"internal.review\" or event.type == \"third.party.review\"\n| summarize {internalTime = takeMin(timestamp), thirdPartyTime = takeMax(timestamp)}, by:{claim.id}\n| filterOut isNull(internalTime) or isNull(thirdPartyTime)\n| fieldsAdd duration = thirdPartyTime - internalTime\n| makeTimeseries averageTime = avg(duration), time:internalTime"
            }
          }
        },
        "davisVisualization": {
          "isAvailable": true,
          "settings": {
            "visibleSections": "VISUALIZATION"
          }
        }
      },
      "visualization": "lineChart",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-status-ideal-default, #2f6863)"
                },
                "comparator": "‚â•",
                "label": ""
              },
              {
                "id": 1,
                "color": {
                  "Default": "var(--dt-colors-charts-status-warning-default, #eca440)"
                },
                "comparator": "‚â•",
                "label": ""
              },
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-status-critical-default, #c4233b)"
                },
                "comparator": "‚â•",
                "label": ""
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "legend": {
            "hidden": true
          },
          "seriesOverrides": [
            {
              "seriesId": ["fail"],
              "override": {
                "color": {
                  "Default": "var(--dt-colors-charts-loglevel-emergency-default, #9033a3)"
                }
              }
            },
            {
              "seriesId": ["success"],
              "override": {
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-09-default, #649438)"
                }
              }
            }
          ],
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "customer.id",
            "valueAxisLabel": "booking.value"
          },
          "fieldMapping": {
            "timestamp": "timeframe",
            "leftAxisValues": ["averageTime"],
            "leftAxisDimensions": []
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "Success rate",
          "prefixIcon": "",
          "recordField": "singlevalue",
          "autoscale": true,
          "alignment": "center",
          "trend": {
            "isRelative": true
          },
          "sparklineSettings": {
            "variant": "area",
            "showTicks": true
          }
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "interval"
          },
          "legend": "auto",
          "displayedFields": [null],
          "colorMode": "color-palette",
          "colorPalette": "blue"
        },
        "unitsOverrides": [
          {
            "identifier": "averageTime",
            "unitCategory": "time",
            "baseUnit": "nanosecond",
            "displayUnit": null,
            "decimals": 2,
            "suffix": "",
            "delimiter": false,
            "added": 1703100359149
          }
        ],
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "interval",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "39": {
      "type": "markdown",
      "title": "",
      "content": "### Probable lost claims\n---\nClaims which went to internal review but have taken much longer than normal."
    },
    "40": {
      "type": "markdown",
      "title": "",
      "content": "### Total claim time\n---\nTime taken from registering a claim to having it settled."
    },
    "41": {
      "type": "data",
      "title": "",
      "query": "fetch bizevents\n| filter event.provider == \"acme.insurance\"\n| filter event.type == \"claim.registered\" or event.type == \"claim.settled\"\n| summarize {registerTime = takeMin(timestamp), settleTime = takeMax(timestamp)}, by:{claim.id}\n| filterOut registerTime == settleTime\n| fieldsAdd duration = settleTime - registerTime\n| makeTimeseries averageTime = avg(duration), time:registerTime",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "lineChart",
      "visualizationSettings": {
        "thresholds": [],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {
            "platinum": {
              "color": "var(--dt-colors-charts-loglevel-emergency-default, #9033a3)",
              "added": 1717152716585
            },
            "sapphire": {
              "color": "var(--dt-colors-charts-apdex-excellent-default, #2a7453)",
              "added": 1717152727709
            },
            "pearl": {
              "color": "var(--dt-colors-charts-categorical-color-02-default, #2c2f3f)",
              "added": 1717152738998
            }
          },
          "legend": {
            "hidden": true
          },
          "seriesOverrides": [
            {
              "seriesId": ["sparkline"],
              "override": {
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-color-08-default, #8b6ecf)"
                }
              }
            }
          ],
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "mgm.rewards",
            "valueAxisLabel": "count()"
          },
          "fieldMapping": {
            "timestamp": "timeframe",
            "leftAxisValues": ["averageTime"],
            "leftAxisDimensions": []
          },
          "hiddenLegendFields": [],
          "xAxisScaling": "analyzedTimeframe"
        },
        "singleValue": {
          "showLabel": true,
          "label": "Success rate",
          "prefixIcon": "",
          "recordField": "singlevalue",
          "autoscale": true,
          "alignment": "center",
          "trend": {
            "isRelative": true
          },
          "sparklineSettings": {
            "variant": "area",
            "showTicks": true
          }
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "interval"
          },
          "legend": "auto",
          "displayedFields": [null],
          "colorMode": "color-palette",
          "colorPalette": "blue"
        },
        "unitsOverrides": [
          {
            "identifier": "averageTime",
            "unitCategory": "time",
            "baseUnit": "nanosecond",
            "displayUnit": null,
            "decimals": 0,
            "suffix": "",
            "delimiter": false,
            "added": 1703100359149
          }
        ],
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "interval",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "42": {
      "type": "markdown",
      "title": "",
      "content": "### End-to-end per claim type\n---\nTime from claim register to settlement, broken down by claim type."
    },
    "45": {
      "type": "data",
      "title": "",
      "query": "fetch bizevents\n| filter event.provider == \"acme.insurance\"\n| filter event.type == \"claim.registered\" or event.type == \"claim.settled\"\n| summarize registerTime = takeMin(timestamp), settleTime = takeMax(timestamp), by:{claim.id}\n| filterOut isNull(registerTime) or isNull(settleTime)\n| fieldsAdd duration = settleTime - registerTime\n| summarize averageTime = avg(duration)",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "averageTime",
            "title": "",
            "isEnabled": true,
            "rules": [
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-vulnerability-status-resolved-default, #3e8e6a)"
                },
                "comparator": ">",
                "label": "",
                "value": 1
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "dt.entity.host",
            "valueAxisLabel": "test"
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "üíº BUSINESS KPI",
          "prefixIcon": "",
          "autoscale": true,
          "sparklineSettings": {
            "isVisible": false
          },
          "alignment": "center",
          "trend": {
            "isVisible": false
          },
          "recordField": "averageTime",
          "colorThresholdTarget": "background"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "averageTime"
          },
          "legend": "auto",
          "displayedFields": [null],
          "colorMode": "color-palette",
          "colorPalette": "blue"
        },
        "unitsOverrides": [
          {
            "identifier": "averageTime",
            "unitCategory": "time",
            "baseUnit": "nanosecond",
            "displayUnit": null,
            "decimals": 2,
            "suffix": "",
            "delimiter": true,
            "added": 1703262264498
          }
        ],
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "averageTime",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "49": {
      "type": "data",
      "title": "",
      "query": "fetch bizevents\n| filter event.provider == \"acme.insurance\"\n| filter event.type == \"instaspect.submitted\" or event.type == \"internal.review\"\n| summarize internalCount = countIf(event.type == \"internal.review\"), thirdCount = countIf(event.type == \"third.party.review\"), firstReviewTime = takeFirst(timestamp), by:{claim.id}\n| fieldsAdd timeSinceFirstReview = (now() - firstReviewTime)\n| filter thirdCount == 0 and timeSinceFirstReview > toDuration(7200000000000)\n| makeTimeseries `Probably lost claims` = count(), time:firstReviewTime, bins:50\n| fieldsAdd totalLostClaims = arraySum(`Probably lost claims`)",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {
            "sapphire": {
              "color": "var(--dt-colors-charts-categorical-color-01-default, #134fc9)",
              "added": 1717151655357
            },
            "gold": {
              "color": "var(--dt-colors-charts-categorical-color-06-default, #a9780f)",
              "added": 1717151659952
            },
            "noir": {
              "color": "var(--dt-colors-charts-loglevel-none-default, #2c2f3f)",
              "added": 1717151665036
            },
            "pearl": {
              "color": "var(--dt-colors-charts-categorical-color-02-default, #2c2f3f)",
              "added": 1717151669712
            },
            "platinum": {
              "color": "var(--dt-colors-charts-categorical-color-07-default, #438fb1)",
              "added": 1717151677352
            }
          },
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "order.id",
            "valueAxisLabel": "pickedCount",
            "layout": "horizontal"
          },
          "hiddenLegendFields": [],
          "legend": {
            "hidden": true
          },
          "fieldMapping": {
            "timestamp": "timeframe",
            "leftAxisValues": ["Probably lost claims"],
            "leftAxisDimensions": ["totalLostClaims"]
          }
        },
        "singleValue": {
          "showLabel": false,
          "label": "",
          "prefixIcon": "MailClosedIcon",
          "recordField": "totalLostClaims",
          "autoscale": true,
          "sparklineSettings": {
            "showTicks": true
          },
          "alignment": "center",
          "trend": {
            "isInverseTrend": true
          }
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "totalLostClaims"
          },
          "legend": "auto",
          "displayedFields": [null],
          "colorMode": "color-palette",
          "colorPalette": "blue"
        },
        "unitsOverrides": [
          {
            "identifier": "singlevalue",
            "unitCategory": "time",
            "baseUnit": "second",
            "displayUnit": null,
            "decimals": 0,
            "suffix": "",
            "delimiter": false,
            "added": 1703177374563
          }
        ],
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "interval",
              "rangeAxis": ""
            },
            {
              "valueAxis": "totalLostClaims",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "51": {
      "type": "markdown",
      "title": "",
      "content": " "
    },
    "53": {
      "type": "markdown",
      "title": "",
      "content": "Drilldown: [IT](https://guu84124.apps.dynatrace.com/ui/apps/dynatrace.classic.problems/ui/problems) | [Security](https://guu84124.apps.dynatrace.com/ui/apps/dynatrace.classic.vulnerabilities/ui/security/vulnerabilities) | [Carbon](https://guu84124.apps.dynatrace.com/ui/apps/dynatrace.biz.carbon/) | [Business](https://www.dynatrace.com/company/dynatrace-for-executives/#02-business-analytics)"
    },
    "54": {
      "type": "markdown",
      "title": "",
      "content": "Drilldown: [IT](https://guu84124.apps.dynatrace.com/ui/apps/dynatrace.classic.problems/ui/problems) | [Security](https://guu84124.apps.dynatrace.com/ui/apps/dynatrace.classic.vulnerabilities/ui/security/vulnerabilities) | [Carbon](https://guu84124.apps.dynatrace.com/ui/apps/dynatrace.biz.carbon/) | [Business](https://guu84124.apps.dynatrace.com/ui/apps/dynatrace.biz.flow/analyze/vu9U3hXa3q0AAAABAChhcHA6ZHluYXRyYWNlLmJpei5mbG93OmJpei1mbG93LXNldHRpbmdzAAZ0ZW5hbnQABnRlbmFudAAkNzBlNWQwZTItZTAwNS0zYWQxLWI4YTgtMGFkZTllNGZjOWQ3vu9U3hXa3q0)"
    },
    "55": {
      "type": "markdown",
      "title": "",
      "content": "Drilldown: [IT](https://guu84124.apps.dynatrace.com/ui/apps/dynatrace.classic.problems/ui/problems) | [Security](https://guu84124.apps.dynatrace.com/ui/apps/dynatrace.classic.vulnerabilities/ui/security/vulnerabilities) | [Carbon](https://guu84124.apps.dynatrace.com/ui/apps/dynatrace.biz.carbon/) | [Business](https://www.dynatrace.com/company/dynatrace-for-executives/#02-business-analytics)"
    },
    "56": {
      "type": "markdown",
      "title": "",
      "content": "Drilldown: [IT](https://guu84124.apps.dynatrace.com/ui/apps/dynatrace.classic.problems/ui/problems) | [Security](https://guu84124.apps.dynatrace.com/ui/apps/dynatrace.classic.vulnerabilities/ui/security/vulnerabilities) | [Carbon](https://guu84124.apps.dynatrace.com/ui/apps/dynatrace.biz.carbon/) | [Business](https://guu84124.apps.dynatrace.com/ui/apps/dynatrace.biz.flow/analyze/vu9U3hXa3q0AAAABAChhcHA6ZHluYXRyYWNlLmJpei5mbG93OmJpei1mbG93LXNldHRpbmdzAAZ0ZW5hbnQABnRlbmFudAAkNzBlNWQwZTItZTAwNS0zYWQxLWI4YTgtMGFkZTllNGZjOWQ3vu9U3hXa3q0)"
    },
    "66": {
      "type": "data",
      "title": "",
      "query": "// The two main ways to achieve this number are:\n// - Query Davis events and filter by the services/entities known to power this part of the journey.\n// - Using a topology lookup:\n//   - Get Biz Events related to this step.\n//   - \"Lookup\" the Spans using the trace ID.\n//   - Collect a \"Distinct\" list of the Services.\n//   - \"Lookup\" any Davis events related to those Services.\nfetch bizevents\n| fieldsAdd problemExample = 0\n| limit 1",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "problemExample",
            "title": "Open Problems",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-themed-fireplace-color-01-default, #ae132d)"
                },
                "comparator": "‚â•",
                "label": "",
                "value": 1
              },
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-vulnerability-status-resolved-default, #3e8e6a)"
                },
                "comparator": "‚â•",
                "label": "",
                "value": 0
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxis": "dt.entity.host",
            "valueAxis": "problemExample",
            "categoryAxisLabel": "dt.entity.host",
            "valueAxisLabel": "problemExample"
          },
          "fieldMapping": {
            "timestamp": "timestamp",
            "leftAxisValues": ["problemExample"],
            "leftAxisDimensions": ["dt.entity.host"]
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "üõ†Ô∏è IT ISSUES",
          "prefixIcon": "",
          "autoscale": true,
          "sparklineSettings": {
            "isVisible": false
          },
          "alignment": "center",
          "trend": {
            "isVisible": false
          },
          "colorThresholdTarget": "background",
          "recordField": "problemExample"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "timestamp"
          },
          "legend": "auto",
          "displayedFields": ["dt.entity.host"],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "problemExample",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "67": {
      "type": "data",
      "title": "",
      "query": "// The two main ways to achieve this number are:\n// - Query Davis events and filter by the services/entities known to power this part of the journey.\n// - Using a topology lookup:\n//   - Get Biz Events related to this step.\n//   - \"Lookup\" the Spans using the trace ID.\n//   - Collect a \"Distinct\" list of the Services.\n//   - \"Lookup\" any Davis events related to those Services.\nfetch bizevents\n| fieldsAdd problemExample = 0\n| limit 1",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "problemExample",
            "title": "Open Problems",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-themed-fireplace-color-01-default, #ae132d)"
                },
                "comparator": "‚â•",
                "label": "",
                "value": 1
              },
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-vulnerability-status-resolved-default, #3e8e6a)"
                },
                "comparator": "‚â•",
                "label": "",
                "value": 0
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxis": "dt.entity.host",
            "valueAxis": "problemExample",
            "categoryAxisLabel": "dt.entity.host",
            "valueAxisLabel": "problemExample"
          },
          "fieldMapping": {
            "timestamp": "timestamp",
            "leftAxisValues": ["problemExample"],
            "leftAxisDimensions": ["dt.entity.host"]
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "üõ†Ô∏è IT ISSUES",
          "prefixIcon": "",
          "autoscale": true,
          "sparklineSettings": {
            "isVisible": false
          },
          "alignment": "center",
          "trend": {
            "isVisible": false
          },
          "colorThresholdTarget": "background",
          "recordField": "problemExample"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "timestamp"
          },
          "legend": "auto",
          "displayedFields": ["dt.entity.host"],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "problemExample",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "68": {
      "type": "data",
      "title": "",
      "query": "// The two main ways to achieve this number are:\n// - Query Davis events and filter by the services/entities known to power this part of the journey.\n// - Using a topology lookup:\n//   - Get Biz Events related to this step.\n//   - \"Lookup\" the Spans using the trace ID.\n//   - Collect a \"Distinct\" list of the Services.\n//   - \"Lookup\" any Davis events related to those Services.\nfetch bizevents\n| fieldsAdd problemExample = 0\n| limit 1",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "problemExample",
            "title": "Open Problems",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-themed-fireplace-color-01-default, #ae132d)"
                },
                "comparator": "‚â•",
                "label": "",
                "value": 1
              },
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-vulnerability-status-resolved-default, #3e8e6a)"
                },
                "comparator": "‚â•",
                "label": "",
                "value": 0
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxis": "dt.entity.host",
            "valueAxis": "problemExample",
            "categoryAxisLabel": "dt.entity.host",
            "valueAxisLabel": "problemExample"
          },
          "fieldMapping": {
            "timestamp": "timestamp",
            "leftAxisValues": ["problemExample"],
            "leftAxisDimensions": ["dt.entity.host"]
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "üõ†Ô∏è IT ISSUES",
          "prefixIcon": "",
          "autoscale": true,
          "sparklineSettings": {
            "isVisible": false
          },
          "alignment": "center",
          "trend": {
            "isVisible": false
          },
          "colorThresholdTarget": "background",
          "recordField": "problemExample"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "timestamp"
          },
          "legend": "auto",
          "displayedFields": ["dt.entity.host"],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "problemExample",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "69": {
      "type": "data",
      "title": "",
      "query": "// The two main ways to achieve this number are:\n// - Query Davis events and filter by the services/entities known to power this part of the journey.\n// - Using a topology lookup:\n//   - Get Biz Events related to this step.\n//   - \"Lookup\" the Spans using the trace ID.\n//   - Collect a \"Distinct\" list of the Services.\n//   - \"Lookup\" any Davis events related to those Services.\nfetch bizevents\n| fieldsAdd problemExample = 0\n| limit 1",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "problemExample",
            "title": "Open Problems",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-categorical-themed-fireplace-color-01-default, #ae132d)"
                },
                "comparator": "‚â•",
                "label": "",
                "value": 1
              },
              {
                "id": 2,
                "color": {
                  "Default": "var(--dt-colors-charts-vulnerability-status-resolved-default, #3e8e6a)"
                },
                "comparator": "‚â•",
                "label": "",
                "value": 0
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxis": "dt.entity.host",
            "valueAxis": "problemExample",
            "categoryAxisLabel": "dt.entity.host",
            "valueAxisLabel": "problemExample"
          },
          "fieldMapping": {
            "timestamp": "timestamp",
            "leftAxisValues": ["problemExample"],
            "leftAxisDimensions": ["dt.entity.host"]
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "üõ†Ô∏è IT ISSUES",
          "prefixIcon": "",
          "autoscale": true,
          "sparklineSettings": {
            "isVisible": false
          },
          "alignment": "center",
          "trend": {
            "isVisible": false
          },
          "colorThresholdTarget": "background",
          "recordField": "problemExample"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "timestamp"
          },
          "legend": "auto",
          "displayedFields": ["dt.entity.host"],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "problemExample",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "70": {
      "type": "data",
      "title": "",
      "query": "// The two main ways to achieve this number are:\n// - Query Security events and filter by the services/entities known to power this part of the journey.\n// - Using a topology lookup:\n//   - Get Biz Events related to this step.\n//   - \"Lookup\" the Spans using the trace ID.\n//   - Collect a \"Distinct\" list of the Services.\n//   - \"Lookup\" any Security events related to those Services.\nfetch bizevents\n| fieldsAdd securityExample = \"3/10\"\n| limit 1",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "securityExample",
            "title": "Security score",
            "isEnabled": true,
            "rules": [
              {
                "id": 1,
                "color": {
                  "Default": "var(--dt-colors-charts-apdex-excellent-default, #2a7453)"
                },
                "comparator": "=",
                "label": "",
                "value": "3/10"
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "securityExample",
            "valueAxisLabel": "order.value",
            "categoryAxis": "securityExample",
            "valueAxis": "order.value"
          },
          "hiddenLegendFields": [],
          "fieldMapping": {
            "timestamp": "timestamp",
            "leftAxisValues": ["order.value"],
            "leftAxisDimensions": ["securityExample"]
          }
        },
        "singleValue": {
          "showLabel": true,
          "label": "üîí SECURITY",
          "prefixIcon": "",
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "background",
          "recordField": "securityExample"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "timestamp"
          },
          "legend": "auto",
          "displayedFields": ["securityExample"],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "dataMappings": []
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "71": {
      "type": "data",
      "title": "",
      "query": "// The two main ways to achieve this number are:\n// - Query Security events and filter by the services/entities known to power this part of the journey.\n// - Using a topology lookup:\n//   - Get Biz Events related to this step.\n//   - \"Lookup\" the Spans using the trace ID.\n//   - Collect a \"Distinct\" list of the Services.\n//   - \"Lookup\" any Security events related to those Services.\nfetch bizevents\n| fieldsAdd securityExample = \"5/10\"\n| limit 1",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "securityExample",
            "title": "Security score",
            "isEnabled": true,
            "rules": [
              {
                "id": 1,
                "color": {
                  "Default": "var(--dt-colors-charts-apdex-excellent-default, #2a7453)"
                },
                "comparator": "=",
                "label": "",
                "value": "5/10"
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxis": "securityExample",
            "valueAxis": "booking.value",
            "categoryAxisLabel": "securityExample",
            "valueAxisLabel": "booking.value"
          },
          "fieldMapping": {
            "timestamp": "timestamp",
            "leftAxisValues": ["booking.value"],
            "leftAxisDimensions": ["securityExample"]
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "üîí SECURITY",
          "prefixIcon": "",
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "background",
          "recordField": "securityExample"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "timestamp"
          },
          "legend": "auto",
          "displayedFields": ["securityExample"],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "dataMappings": []
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "72": {
      "type": "data",
      "title": "",
      "query": "// The two main ways to achieve this number are:\n// - Query Security events and filter by the services/entities known to power this part of the journey.\n// - Using a topology lookup:\n//   - Get Biz Events related to this step.\n//   - \"Lookup\" the Spans using the trace ID.\n//   - Collect a \"Distinct\" list of the Services.\n//   - \"Lookup\" any Security events related to those Services.\nfetch bizevents\n| fieldsAdd securityExample = \"4/10\"\n| limit 1",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "securityExample",
            "title": "Security score",
            "isEnabled": true,
            "rules": [
              {
                "id": 1,
                "color": {
                  "Default": "var(--dt-colors-charts-apdex-excellent-default, #2a7453)"
                },
                "comparator": "=",
                "label": "",
                "value": "4/10"
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "securityExample",
            "valueAxisLabel": "account.fee",
            "categoryAxis": "securityExample",
            "valueAxis": "account.fee"
          },
          "hiddenLegendFields": [],
          "fieldMapping": {
            "timestamp": "timestamp",
            "leftAxisValues": ["account.fee"],
            "leftAxisDimensions": ["securityExample"]
          }
        },
        "singleValue": {
          "showLabel": true,
          "label": "üîí SECURITY",
          "prefixIcon": "",
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "background",
          "recordField": "securityExample"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "timestamp"
          },
          "legend": "auto",
          "displayedFields": ["securityExample"],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "dataMappings": []
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "73": {
      "type": "data",
      "title": "",
      "query": "// The two main ways to achieve this number are:\n// - Query Security events and filter by the services/entities known to power this part of the journey.\n// - Using a topology lookup:\n//   - Get Biz Events related to this step.\n//   - \"Lookup\" the Spans using the trace ID.\n//   - Collect a \"Distinct\" list of the Services.\n//   - \"Lookup\" any Security events related to those Services.\nfetch bizevents\n| fieldsAdd securityExample = \"2/10\"\n| limit 1",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "securityExample",
            "title": "Security score",
            "isEnabled": true,
            "rules": [
              {
                "id": 1,
                "color": {
                  "Default": "var(--dt-colors-charts-apdex-excellent-default, #2a7453)"
                },
                "comparator": "=",
                "label": "",
                "value": "2/10"
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "categoricalBarChartSettings": {
            "categoryAxis": "securityExample",
            "valueAxis": "booking.value",
            "categoryAxisLabel": "securityExample",
            "valueAxisLabel": "booking.value"
          },
          "fieldMapping": {
            "timestamp": "timestamp",
            "leftAxisValues": ["booking.value"],
            "leftAxisDimensions": ["securityExample"]
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "üîí SECURITY",
          "prefixIcon": "",
          "autoscale": true,
          "alignment": "center",
          "colorThresholdTarget": "background",
          "recordField": "securityExample"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "timestamp"
          },
          "legend": "auto",
          "displayedFields": ["securityExample"],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "histogram": {
          "dataMappings": []
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "74": {
      "type": "data",
      "title": "",
      "query": "// This number obviously requires the Carbon app to be installed. An example way to calculate the footprint for part of the journey is:\n// - Fetch the Biz Events related to this part of the journey.\n// - Collect a \"Distinct\" list of the Hosts those Biz Events come from.\n// - \"Lookup\" the Carbon events related to those hosts.\n// - (Optional) If there's lots of shared infrastructure, you can go one step further and use the Process CPU to distribute Carbon to the specific Processes in use.\nfetch bizevents\n| fieldsAdd carbonExample = 105\n| limit 1",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "carbonExample",
            "title": "Carbon footprint",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-apdex-excellent-default, #2a7453)"
                },
                "comparator": "<",
                "label": "",
                "value": 1000
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "fieldMapping": {
            "timestamp": "timestamp",
            "leftAxisValues": ["carbonExample"],
            "leftAxisDimensions": ["dt.entity.host"]
          },
          "categoricalBarChartSettings": {
            "categoryAxis": "dt.entity.host",
            "valueAxis": "carbonExample",
            "categoryAxisLabel": "dt.entity.host",
            "valueAxisLabel": "carbonExample"
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "üå≥ CARBON",
          "autoscale": true,
          "sparklineSettings": {
            "isVisible": false,
            "showTicks": true
          },
          "alignment": "center",
          "trend": {
            "isVisible": true,
            "isRelative": true,
            "isInverseTrend": true
          },
          "recordField": "carbonExample",
          "colorThresholdTarget": "background"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "timestamp"
          },
          "legend": "auto",
          "displayedFields": ["dt.entity.host"],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "unitsOverrides": [
          {
            "identifier": "carbonExample",
            "unitCategory": "mass",
            "baseUnit": "kilogram",
            "displayUnit": "kilogram",
            "decimals": 0,
            "suffix": "",
            "delimiter": false,
            "added": 1703159936837
          }
        ],
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "carbonExample",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "75": {
      "type": "data",
      "title": "",
      "query": "// This number obviously requires the Carbon app to be installed. An example way to calculate the footprint for part of the journey is:\n// - Fetch the Biz Events related to this part of the journey.\n// - Collect a \"Distinct\" list of the Hosts those Biz Events come from.\n// - \"Lookup\" the Carbon events related to those hosts.\n// - (Optional) If there's lots of shared infrastructure, you can go one step further and use the Process CPU to distribute Carbon to the specific Processes in use.\nfetch bizevents\n| fieldsAdd carbonExample = 587\n| limit 1",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "carbonExample",
            "title": "Carbon footprint",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-apdex-excellent-default, #2a7453)"
                },
                "comparator": "<",
                "label": "",
                "value": 1000
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "fieldMapping": {
            "timestamp": "timestamp",
            "leftAxisValues": ["carbonExample"],
            "leftAxisDimensions": ["dt.entity.host"]
          },
          "categoricalBarChartSettings": {
            "categoryAxis": "dt.entity.host",
            "valueAxis": "carbonExample",
            "categoryAxisLabel": "dt.entity.host",
            "valueAxisLabel": "carbonExample"
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "üå≥ CARBON",
          "autoscale": true,
          "sparklineSettings": {
            "isVisible": false,
            "showTicks": true
          },
          "alignment": "center",
          "trend": {
            "isVisible": true,
            "isRelative": true,
            "isInverseTrend": true
          },
          "recordField": "carbonExample",
          "colorThresholdTarget": "background"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "timestamp"
          },
          "legend": "auto",
          "displayedFields": ["dt.entity.host"],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "unitsOverrides": [
          {
            "identifier": "carbonExample",
            "unitCategory": "mass",
            "baseUnit": "kilogram",
            "displayUnit": "kilogram",
            "decimals": 0,
            "suffix": "",
            "delimiter": false,
            "added": 1703159936837
          }
        ],
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "carbonExample",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "76": {
      "type": "data",
      "title": "",
      "query": "// This number obviously requires the Carbon app to be installed. An example way to calculate the footprint for part of the journey is:\n// - Fetch the Biz Events related to this part of the journey.\n// - Collect a \"Distinct\" list of the Hosts those Biz Events come from.\n// - \"Lookup\" the Carbon events related to those hosts.\n// - (Optional) If there's lots of shared infrastructure, you can go one step further and use the Process CPU to distribute Carbon to the specific Processes in use.\nfetch bizevents\n| fieldsAdd carbonExample = 98\n| limit 1",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "carbonExample",
            "title": "Carbon footprint",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-apdex-excellent-default, #2a7453)"
                },
                "comparator": "<",
                "label": "",
                "value": 1000
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "fieldMapping": {
            "timestamp": "timestamp",
            "leftAxisValues": ["carbonExample"],
            "leftAxisDimensions": ["dt.entity.host"]
          },
          "categoricalBarChartSettings": {
            "categoryAxis": "dt.entity.host",
            "valueAxis": "carbonExample",
            "categoryAxisLabel": "dt.entity.host",
            "valueAxisLabel": "carbonExample"
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "üå≥ CARBON",
          "autoscale": true,
          "sparklineSettings": {
            "isVisible": false,
            "showTicks": true
          },
          "alignment": "center",
          "trend": {
            "isVisible": true,
            "isRelative": true,
            "isInverseTrend": true
          },
          "recordField": "carbonExample",
          "colorThresholdTarget": "background"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "timestamp"
          },
          "legend": "auto",
          "displayedFields": ["dt.entity.host"],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "unitsOverrides": [
          {
            "identifier": "carbonExample",
            "unitCategory": "mass",
            "baseUnit": "kilogram",
            "displayUnit": "kilogram",
            "decimals": 0,
            "suffix": "",
            "delimiter": false,
            "added": 1703159936837
          }
        ],
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "carbonExample",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "77": {
      "type": "data",
      "title": "",
      "query": "// This number obviously requires the Carbon app to be installed. An example way to calculate the footprint for part of the journey is:\n// - Fetch the Biz Events related to this part of the journey.\n// - Collect a \"Distinct\" list of the Hosts those Biz Events come from.\n// - \"Lookup\" the Carbon events related to those hosts.\n// - (Optional) If there's lots of shared infrastructure, you can go one step further and use the Process CPU to distribute Carbon to the specific Processes in use.\nfetch bizevents\n| fieldsAdd carbonExample = 56\n| limit 1",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "singleValue",
      "visualizationSettings": {
        "thresholds": [
          {
            "id": 1,
            "field": "carbonExample",
            "title": "Carbon footprint",
            "isEnabled": true,
            "rules": [
              {
                "id": 0,
                "color": {
                  "Default": "var(--dt-colors-charts-apdex-excellent-default, #2a7453)"
                },
                "comparator": "<",
                "label": "",
                "value": 1000
              }
            ]
          }
        ],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {},
          "fieldMapping": {
            "timestamp": "timestamp",
            "leftAxisValues": ["carbonExample"],
            "leftAxisDimensions": ["dt.entity.host"]
          },
          "categoricalBarChartSettings": {
            "categoryAxis": "dt.entity.host",
            "valueAxis": "carbonExample",
            "categoryAxisLabel": "dt.entity.host",
            "valueAxisLabel": "carbonExample"
          },
          "hiddenLegendFields": []
        },
        "singleValue": {
          "showLabel": true,
          "label": "üå≥ CARBON",
          "autoscale": true,
          "sparklineSettings": {
            "isVisible": false,
            "showTicks": true
          },
          "alignment": "center",
          "trend": {
            "isVisible": true,
            "isRelative": true,
            "isInverseTrend": true
          },
          "recordField": "carbonExample",
          "colorThresholdTarget": "background"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "timestamp"
          },
          "legend": "auto",
          "displayedFields": ["dt.entity.host"],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "unitsOverrides": [
          {
            "identifier": "carbonExample",
            "unitCategory": "mass",
            "baseUnit": "kilogram",
            "displayUnit": "kilogram",
            "decimals": 0,
            "suffix": "",
            "delimiter": false,
            "added": 1703159936837
          }
        ],
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "carbonExample",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "78": {
      "type": "data",
      "title": "",
      "query": "fetch bizevents\n| filter event.provider == \"acme.insurance\"\n| filter event.type == \"claim.registered\" or event.type == \"claim.settled\"\n| summarize registerTime = takeMin(timestamp), settleTime = takeMax(timestamp), claimType = takeAny(claim.type), by:{claim.id}\n| filterOut isNull(registerTime) or isNull(settleTime)\n| fieldsAdd duration = settleTime - registerTime\n| summarize averageTime = avg(duration), by:{claimType}",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "categoricalBarChart",
      "visualizationSettings": {
        "thresholds": [],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {
            "cargo": {
              "color": "var(--dt-colors-charts-logstatus-none-default, #2c2f3f)",
              "added": 1722267772948
            },
            "liability": {
              "color": "var(--dt-colors-charts-categorical-color-15-default, #9033a3)",
              "added": 1722267774641
            },
            "property": {
              "color": "var(--dt-colors-charts-categorical-color-09-default, #649438)",
              "added": 1722267775893
            }
          },
          "categoricalBarChartSettings": {
            "categoryAxis": "claimType",
            "valueAxis": "averageTime",
            "categoryAxisLabel": "claimType",
            "valueAxisLabel": "averageTime",
            "layout": "vertical"
          },
          "hiddenLegendFields": [],
          "legend": {
            "hidden": true
          }
        },
        "singleValue": {
          "showLabel": false,
          "label": "",
          "prefixIcon": "",
          "recordField": "test",
          "autoscale": true,
          "sparklineSettings": {
            "showTicks": true
          },
          "alignment": "center"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "claimType"
          },
          "legend": "auto",
          "displayedFields": ["claimType"],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "unitsOverrides": [
          {
            "identifier": "singlevalue",
            "unitCategory": "time",
            "baseUnit": "second",
            "displayUnit": null,
            "decimals": 0,
            "suffix": "",
            "delimiter": false,
            "added": 1703177374563
          }
        ],
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "averageTime",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    },
    "79": {
      "type": "data",
      "title": "",
      "query": "fetch bizevents\n| filter event.provider == \"acme.insurance\"\n| filter event.type == \"internal.review\" or event.type == \"third.party.review\" or event.type == \"further.evidence\"\n| summarize {internalTime = takeMin(timestamp), thirdPartyTime = takeMax(timestamp), furtherCount = countIf(event.type == \"further.evidence\")}, by:{claim.id}\n| filterOut internalTime == thirdPartyTime\n| fieldsAdd duration = thirdPartyTime - internalTime, thirdParty = if(furtherCount > 0, true, else:{false})\n| makeTimeseries averageTime = avg(duration), time:internalTime, by:{thirdParty}, bins:50",
      "davis": {
        "enabled": false,
        "davisVisualization": {
          "isAvailable": true
        }
      },
      "visualization": "lineChart",
      "visualizationSettings": {
        "thresholds": [],
        "chartSettings": {
          "gapPolicy": "connect",
          "circleChartSettings": {
            "groupingThresholdType": "relative",
            "groupingThresholdValue": 0,
            "valueType": "relative"
          },
          "categoryOverrides": {
            "sapphire": {
              "color": "var(--dt-colors-charts-categorical-color-01-default, #134fc9)",
              "added": 1717151655357
            },
            "gold": {
              "color": "var(--dt-colors-charts-categorical-color-06-default, #a9780f)",
              "added": 1717151659952
            },
            "noir": {
              "color": "var(--dt-colors-charts-loglevel-none-default, #2c2f3f)",
              "added": 1717151665036
            },
            "pearl": {
              "color": "var(--dt-colors-charts-categorical-color-02-default, #2c2f3f)",
              "added": 1717151669712
            },
            "platinum": {
              "color": "var(--dt-colors-charts-categorical-color-07-default, #438fb1)",
              "added": 1717151677352
            }
          },
          "categoricalBarChartSettings": {
            "categoryAxisLabel": "dt.entity.host",
            "valueAxisLabel": "test",
            "layout": "horizontal"
          },
          "hiddenLegendFields": [],
          "legend": {
            "hidden": true
          },
          "fieldMapping": {
            "timestamp": "timeframe",
            "leftAxisValues": ["averageTime"],
            "leftAxisDimensions": ["thirdParty"]
          }
        },
        "singleValue": {
          "showLabel": false,
          "label": "",
          "prefixIcon": "MoneyIcon",
          "recordField": "totalVoucherOffer",
          "autoscale": true,
          "sparklineSettings": {
            "showTicks": true
          },
          "alignment": "center"
        },
        "table": {
          "rowDensity": "condensed",
          "enableSparklines": false,
          "hiddenColumns": [],
          "lineWrapIds": [],
          "columnWidths": {}
        },
        "honeycomb": {
          "shape": "square",
          "dataMappings": {
            "value": "thirdParty"
          },
          "legend": "auto",
          "displayedFields": ["thirdParty"],
          "colorMode": "color-palette",
          "colorPalette": "categorical"
        },
        "unitsOverrides": [
          {
            "identifier": "averageTime",
            "unitCategory": "time",
            "baseUnit": "nanosecond",
            "displayUnit": null,
            "decimals": 2,
            "suffix": "",
            "delimiter": false,
            "added": 1703177374563
          }
        ],
        "histogram": {
          "dataMappings": [
            {
              "valueAxis": "interval",
              "rangeAxis": ""
            }
          ]
        }
      },
      "querySettings": {
        "maxResultRecords": 1000,
        "defaultScanLimitGbytes": 500,
        "maxResultMegaBytes": 100,
        "defaultSamplingRatio": 10,
        "enableSampling": false
      }
    }
  },
  "layouts": {
    "0": {
      "x": 0,
      "y": 0,
      "w": 4,
      "h": 2
    },
    "1": {
      "x": 5,
      "y": 0,
      "w": 4,
      "h": 2
    },
    "2": {
      "x": 10,
      "y": 0,
      "w": 4,
      "h": 2
    },
    "3": {
      "x": 15,
      "y": 0,
      "w": 4,
      "h": 2
    },
    "4": {
      "x": 20,
      "y": 0,
      "w": 4,
      "h": 2
    },
    "6": {
      "x": 0,
      "y": 2,
      "w": 2,
      "h": 2
    },
    "11": {
      "x": 0,
      "y": 17,
      "w": 4,
      "h": 5
    },
    "13": {
      "x": 0,
      "y": 6,
      "w": 4,
      "h": 1
    },
    "14": {
      "x": 0,
      "y": 9,
      "w": 4,
      "h": 5
    },
    "15": {
      "x": 0,
      "y": 15,
      "w": 4,
      "h": 2
    },
    "16": {
      "x": 0,
      "y": 7,
      "w": 4,
      "h": 2
    },
    "17": {
      "x": 5,
      "y": 7,
      "w": 4,
      "h": 2
    },
    "18": {
      "x": 2,
      "y": 2,
      "w": 2,
      "h": 2
    },
    "22": {
      "x": 5,
      "y": 9,
      "w": 4,
      "h": 5
    },
    "23": {
      "x": 5,
      "y": 15,
      "w": 4,
      "h": 2
    },
    "24": {
      "x": 5,
      "y": 17,
      "w": 4,
      "h": 5
    },
    "25": {
      "x": 0,
      "y": 4,
      "w": 2,
      "h": 2
    },
    "26": {
      "x": 2,
      "y": 4,
      "w": 2,
      "h": 2
    },
    "28": {
      "x": 7,
      "y": 4,
      "w": 2,
      "h": 2
    },
    "31": {
      "x": 12,
      "y": 4,
      "w": 2,
      "h": 2
    },
    "32": {
      "x": 17,
      "y": 4,
      "w": 2,
      "h": 2
    },
    "33": {
      "x": 10,
      "y": 9,
      "w": 4,
      "h": 5
    },
    "34": {
      "x": 10,
      "y": 7,
      "w": 4,
      "h": 2
    },
    "35": {
      "x": 15,
      "y": 7,
      "w": 4,
      "h": 2
    },
    "36": {
      "x": 15,
      "y": 15,
      "w": 4,
      "h": 2
    },
    "37": {
      "x": 15,
      "y": 9,
      "w": 4,
      "h": 5
    },
    "39": {
      "x": 10,
      "y": 15,
      "w": 4,
      "h": 2
    },
    "40": {
      "x": 20,
      "y": 7,
      "w": 4,
      "h": 2
    },
    "41": {
      "x": 20,
      "y": 9,
      "w": 4,
      "h": 5
    },
    "42": {
      "x": 20,
      "y": 15,
      "w": 4,
      "h": 2
    },
    "45": {
      "x": 22,
      "y": 4,
      "w": 2,
      "h": 2
    },
    "49": {
      "x": 10,
      "y": 17,
      "w": 4,
      "h": 5
    },
    "51": {
      "x": 0,
      "y": 14,
      "w": 24,
      "h": 1
    },
    "53": {
      "x": 10,
      "y": 6,
      "w": 4,
      "h": 1
    },
    "54": {
      "x": 15,
      "y": 6,
      "w": 4,
      "h": 1
    },
    "55": {
      "x": 20,
      "y": 6,
      "w": 4,
      "h": 1
    },
    "56": {
      "x": 5,
      "y": 6,
      "w": 4,
      "h": 1
    },
    "66": {
      "x": 5,
      "y": 2,
      "w": 2,
      "h": 2
    },
    "67": {
      "x": 10,
      "y": 2,
      "w": 2,
      "h": 2
    },
    "68": {
      "x": 15,
      "y": 2,
      "w": 2,
      "h": 2
    },
    "69": {
      "x": 20,
      "y": 2,
      "w": 2,
      "h": 2
    },
    "70": {
      "x": 7,
      "y": 2,
      "w": 2,
      "h": 2
    },
    "71": {
      "x": 12,
      "y": 2,
      "w": 2,
      "h": 2
    },
    "72": {
      "x": 17,
      "y": 2,
      "w": 2,
      "h": 2
    },
    "73": {
      "x": 22,
      "y": 2,
      "w": 2,
      "h": 2
    },
    "74": {
      "x": 5,
      "y": 4,
      "w": 2,
      "h": 2
    },
    "75": {
      "x": 10,
      "y": 4,
      "w": 2,
      "h": 2
    },
    "76": {
      "x": 15,
      "y": 4,
      "w": 2,
      "h": 2
    },
    "77": {
      "x": 20,
      "y": 4,
      "w": 2,
      "h": 2
    },
    "78": {
      "x": 20,
      "y": 17,
      "w": 4,
      "h": 5
    },
    "79": {
      "x": 15,
      "y": 17,
      "w": 4,
      "h": 5
    }
  },
  "importedWithCode": true,
  "settings": {
    "defaultTimeframe": {
      "value": {
        "from": "now()-24h",
        "to": "now()"
      },
      "enabled": true
    }
  }
}
